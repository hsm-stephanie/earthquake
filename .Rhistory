document()
library(devtools)
has_devel() #TRUE is good
library(roxygen2)
library(testthat)
document()
document()
document()
document()
document()
use_vignette('Introduction')
load_all()
load("eqdata.RData")
use_data(eqdata)
document()
document()
use_data_raw(name="sigif.txt")
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(earthquake)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(earthquake)
#import raw data
data<-read_delim('signif.txt',delim="\t")
library(earthquake)
library(readr)
#import raw data
data<-read_delim('signif.txt',delim="\t")
#import raw data
data<-read_delim('signif.txt',delim="\t")
str(data)
#import raw data
data<-read_delim('signif.txt',delim="\t",verbose=F)
#import raw data
data<-read_delim('signif.txt',delim="\t")
#clean country names
eq_location_clean("ECUADOR:  RIOBAMBA, QUITO, CUZCO")
eq_location_clean("TURKEY")
eq_location_clean("China: Jiangsu: Nanjing")
#clean earthquake data
data1<-eq_clean_data(data)
str(data1)
#import raw data
data<-read_delim('signif.txt',delim="\t")
#load cleaned example data of 3 countries
data(eqdata)
str(eqdata)
#timeline plot of INDONEISA
eqdata %>%
filter(COUNTRY=="INDONESIA") %>%
ggplot(aes(x=DATE,size=EQ_PRIMARY,fill=TOTAL_DEATHS/10000))+geom_timeline()+mytheme+labs(fill="# deaths",size="Richter scale")
#timeline plot of multiple countries
eqdata %>%
ggplot(aes(x=DATE,y=COUNTRY,size=EQ_PRIMARY,fill=TOTAL_DEATHS/10000))+geom_timeline()+mytheme+labs(fill="# deaths",size="Richter scale")
#timepline plot with location name of earthquakes
eqdata %>%
filter(COUNTRY=="INDONESIA") %>%
ggplot(aes(x=DATE,size=EQ_PRIMARY,fill=TOTAL_DEATHS/10000))+geom_timeline()+mytheme+labs(fill="# deaths",size="Richter scale")+geom_timeline_label(label="LOCATION_NAME",n_max=8)
#timepline plot with location name of earthquakes
eqdata %>%
filter(COUNTRY=="INDONESIA") %>%
ggplot(aes(x=DATE,size=EQ_PRIMARY,fill=TOTAL_DEATHS/10000))+geom_timeline()+mytheme+labs(fill="# deaths",size="Richter scale")+geom_timeline_label(label=LOCATION_NAME,n_max=8)
#timepline plot with location name of earthquakes
eqdata %>%
filter(COUNTRY=="INDONESIA") %>%
ggplot(aes(x=DATE,size=EQ_PRIMARY,fill=TOTAL_DEATHS/10000))+geom_timeline()+mytheme+labs(fill="# deaths",size="Richter scale")+geom_timeline_label(aes(label=LOCATION_NAME,n_max=8))
#timepline plot with location name of earthquakes
eqdata %>%
filter(COUNTRY=="USA") %>%
ggplot(aes(x=DATE,size=EQ_PRIMARY,fill=TOTAL_DEATHS/10000))+geom_timeline()+mytheme+labs(fill="# deaths",size="Richter scale")+geom_timeline_label(aes(label=LOCATION_NAME,n_max=8))
#interactive map annotated with date of earthquake
eqdata %>%
filter(COUNTRY=="JAPAN") %>%
eq_map(annot_col = "DATE")
#interactive map annotated with date of earthquake
eqdata %>%
filter(COUNTRY=="JAPAN") %>%
eq_create_label() %>%
eq_map(annot_col = "popup_text")
#interactive map annotated with date of earthquake
eqdata %>%
filter(COUNTRY=="USA") %>%
eq_create_label() %>%
eq_map(annot_col = "popup_text")
#interactive map annotated with date of earthquake
eqdata %>%
filter(COUNTRY=="INDONESIA") %>%
eq_create_label() %>%
eq_map(annot_col = "popup_text")
devtools::use_testthat()
devtools::use_testthat()
test()
use_data_raw(name="signif")
#import raw data
data<-read_delim('data-raw\signif.txt',delim="\t")
#import raw data
data<-read_delim('data-raw/signif.txt',delim="\t")
#import raw data
data<-read_delim('signif.txt',delim="\t")
signif<-data
use_data(signif)
test_that("date class",
expect_equal(is.Date(eq_clean_data(signif)$DATE),"TRUE")
is.Date("1")
?
1+1
is.Date("1")
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
class(class("1"))
class(class(1))
class("2010-1-1")
class(2010)
data<-data.frame(MONTH=c(1,1,1),
DAY=c(1,1,1),
YEAR=c(1999,2000,2001),
EQ_PRIMARY=c("6","4","2"),
TOTAL_DEATHS=c("500","50","1"),
DEATHS=c("500","50","1"),
LATITUDE=c("1.1","2.2","1.8"),
LONGITUDE=c("98.1","99.5","100.1"),
LOCATION_NAME=c("J","J","J"),
COUNTRY=c("J","J","J"))
data
eq_clean_data(data)$DATE
data1<-eq_clean_data(data)
str(data)
data<-data.frame(MONTH=c(1,1,1),
DAY=c(1,1,1),
YEAR=c(1999,2000,2001),
EQ_PRIMARY=as.character(c("6","4","2")),
TOTAL_DEATHS=as.character(c("500","50","1")),
DEATHS=as.character(c("500","50","1")),
LATITUDE=as.character(c("1.1","2.2","1.8")),
LONGITUDE=as.character(c("98.1","99.5","100.1")),
LOCATION_NAME=as.character(c("J","J","J")),
COUNTRY=as.character(c("J","J","J")))
str(data)
as.numeric(data$EQ_PRIMARY)
data<-data.frame(MONTH=c(1,1,1),
DAY=c(1,1,1),
YEAR=c(1999,2000,2001),
EQ_PRIMARY=c("6","4","2"),
TOTAL_DEATHS=c("500","50","1"),
DEATHS=c("500","50","1"),
LATITUDE=c("1.1","2.2","1.8"),
LONGITUDE=c("98.1","99.5","100.1"),
LOCATION_NAME=c("J-1","J-2","J-3"),
COUNTRY=c("J","J","J"))
str(data)
as.character(data$LOCATION_NAME)
data$LOCATION_NAME=as.character(data$LOCATION_NAME)
str(data)
test_that("date class",
expect_equal(class(eq_clean_data(data)$DATE),"Date"))
class(eq_clean_data(data)$DATE)
devtools::check()
